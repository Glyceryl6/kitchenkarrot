# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a package using Gradle and then publish it to GitHub packages when a release is created
# For more information see: https://github.com/actions/setup-java/blob/main/docs/advanced-usage.md#Publishing-using-gradle

name: Gradle Package

on:
  push:
    paths:
      - '**/*src/**/*.java'

jobs:
  datagen:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write

    steps:

      - uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          server-id: github # Value of the distributionManagement/repository/id field of the pom.xml
          settings-path: ${{ github.workspace }} # location for the settings.xml file

      - name: Cache
        if: always()
        uses: actions/cache@v3
        with:
          path: |
            .gradle/caches
            .gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Run DataGen
        run: gradle runData -q --no-daemon

      - name: Push
        if: always()
        run: |
          git config --global user.name DataGenCI
          git add .
          git reset --mixed settings.xml
          git reset --mixed toolchains.xml
          git commit -m "datagen" -a
          git push

      - name: Build with Gradle
        if: always()
        run: gradle build -q

      - name: Upload files to a GitHub release
        if: always()
        uses: svenstaro/upload-release-action@2.3.0
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          tag: ${{ github.ref }}-Alpha
          file: build/libs/*.jar
          overwrite: true
          file_glob: true